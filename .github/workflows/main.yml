name: Ngrok CD

on:
  pull_request:
    types: [closed]
    branches:
      - main
    if: github.event.pull_request.merged == true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Build and package
        run: |
          uvicorn main:app --host 0.0.0.0 --port 8000

      - name: Install Nginx
        run: |
          sudo apt update
          sudo apt install nginx

      - name: Configure Nginx
        run: |
          sudo cp nginx.conf /etc/nginx/sites-available/default
          sudo service nginx restart

      - name: Install Ngrok CLI
        run: |
          curl -sSL https://ngrok-agent.s3.amazonaws.com/ngrok.asc \
          	| sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null \
          	&& echo "deb https://ngrok-agent.s3.amazonaws.com buster main" \
          	| sudo tee /etc/apt/sources.list.d/ngrok.list \
          	&& sudo apt update \
          	&& sudo apt install ngrok

      - name: Start Ngrok tunnel
        run: |
          ngrok config add-authtoken ${{ secrets.NGROK_AUTHTOKEN }}
          ngrok http --url=sunbeam-noted-quetzal.ngrok-free.app 8000
